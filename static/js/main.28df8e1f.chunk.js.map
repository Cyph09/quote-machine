{"version":3,"sources":["components/Quote.js","components/Button.js","components/TwitterButton.js","components/QuoteBox.js","App.js","index.js"],"names":["Quote","loading","quote","author","className","id","Button","name","clicked","onClick","TwitterButton","href","target","generateRandomQuote","arr","randomQuoteIndex","Math","floor","random","length","QuoteBox","props","state","error","isLoading","quotes","getNewQuote","bind","axios","get","then","response","data","setState","catch","this","Component","App","ReactDOM","render","document","getElementById"],"mappings":"uTAeeA,EAbD,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,MAAOC,EAAnB,EAAmBA,OAAnB,OACZ,yBAAKC,UAAU,SACZH,EACC,yCAEA,oCACE,uBAAGI,GAAG,QAAQH,GACd,uBAAGG,GAAG,UAAN,KAAkBF,MCHXG,EALA,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAAT,OACb,4BAAQJ,UAAU,MAAMK,QAASD,GAC9BD,ICSUG,EAXO,SAAC,GAAD,IAAGR,EAAH,EAAGA,MAAOC,EAAV,EAAUA,OAAV,OACpB,uBACEE,GAAG,cACHD,UAAU,2BACVO,KAAI,iDAA4CT,EAA5C,aAAsDC,GAC1DS,OAAO,UAJT,UCIF,SAASC,EAAoBC,GAC3B,IAAMC,EAAmBC,KAAKC,MAAMD,KAAKE,SAAWJ,EAAIK,QAGxD,MAAO,CAAEjB,MAFGY,EAAIC,GAAkBb,MAElBC,OADHW,EAAIC,GAAkBZ,Q,IAwEtBiB,E,YAnEb,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KACDC,MAAQ,CACXC,MAAO,KACPC,WAAW,EACXC,OAAQ,GACRvB,MAAO,GACPC,OAAQ,IAGV,EAAKuB,YAAc,EAAKA,YAAYC,KAAjB,gBAVF,E,iFAaE,IAAD,OAClBC,IACGC,IACC,wIAEDC,MAAK,SAAAC,GAAa,IACTN,EAAWM,EAASC,KAApBP,OADQ,EAEQZ,EAAoBY,GAAtCvB,EAFU,EAEVA,MAAOC,EAFG,EAEHA,OACb,EAAK8B,SAAS,CACZR,SACAvB,QACAC,SACAqB,WAAW,OAGdU,OAAM,SAAAX,GACL,EAAKU,SAAS,CACZT,WAAW,EACXD,MAAOA,S,oCAKA,IACLE,EAAWU,KAAKb,MAAhBG,OAER,GAAIA,GAAUA,EAAON,OAAQ,CAAC,IAAD,EACHN,EAAoBY,GAAtCvB,EADqB,EACrBA,MAAOC,EADc,EACdA,OACbgC,KAAKF,SAAS,CAAE/B,QAAOC,c,+BAGjB,IAAD,EACqCgC,KAAKb,MAAzCE,EADD,EACCA,UAAWtB,EADZ,EACYA,MAAOC,EADnB,EACmBA,OAAQoB,EAD3B,EAC2BA,MAClC,OACE,yBAAKlB,GAAG,aACLkB,EACC,wFAEA,oCACE,kBAAC,EAAD,CAAOtB,QAASuB,EAAWtB,MAAOA,EAAOC,OAAQA,IACjD,yBAAKC,UAAU,oBACb,kBAAC,EAAD,CAAeF,MAAOA,EAAOC,OAAQA,IACrC,kBAAC,EAAD,CACEE,GAAG,YACHG,QAAS2B,KAAKT,YACdnB,KAAK,qB,GA3DE6B,a,MCLRC,MAJf,WACE,OAAO,kBAAC,EAAD,OCATC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.28df8e1f.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Quote = ({ loading, quote, author }) => (\r\n  <div className=\"quote\">\r\n    {loading ? (\r\n      <p>Loading...</p>\r\n    ) : (\r\n      <>\r\n        <p id=\"text\">{quote}</p>\r\n        <p id=\"author\">~ {author}</p>\r\n      </>\r\n    )}\r\n  </div>\r\n);\r\n\r\nexport default Quote;\r\n","import React from \"react\";\r\nconst Button = ({ name, clicked }) => (\r\n  <button className=\"btn\" onClick={clicked}>\r\n    {name}\r\n  </button>\r\n);\r\nexport default Button;\r\n","import React from \"react\";\r\nconst TwitterButton = ({ quote, author }) => (\r\n  <a\r\n    id=\"tweet-quote\"\r\n    className=\"btn twitter-share-button\"\r\n    href={`https://twitter.com/intent/tweet?text=\"${quote}\" ${author}`}\r\n    target=\"_blank\"\r\n  >\r\n    Tweet\r\n  </a>\r\n);\r\n\r\nexport default TwitterButton;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport Quote from \"./Quote\";\r\nimport Button from \"./Button\";\r\nimport TwitterButton from \"./TwitterButton\";\r\n\r\nfunction generateRandomQuote(arr) {\r\n  const randomQuoteIndex = Math.floor(Math.random() * arr.length);\r\n  let quote = arr[randomQuoteIndex].quote;\r\n  let author = arr[randomQuoteIndex].author;\r\n  return { quote, author };\r\n}\r\n\r\nclass QuoteBox extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      error: null,\r\n      isLoading: true,\r\n      quotes: [],\r\n      quote: \"\",\r\n      author: \"\"\r\n    };\r\n\r\n    this.getNewQuote = this.getNewQuote.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(\r\n        \"https://gist.githubusercontent.com/irkreja/5f35dc197c6be4ddc32a45acdd23fcd7/raw/0d9b85d4a9d9da9dc67fa0257df66ed80702ff3a/quotes.json\"\r\n      )\r\n      .then(response => {\r\n        const { quotes } = response.data;\r\n        let { quote, author } = generateRandomQuote(quotes);\r\n        this.setState({\r\n          quotes,\r\n          quote,\r\n          author,\r\n          isLoading: false\r\n        });\r\n      })\r\n      .catch(error => {\r\n        this.setState({\r\n          isLoading: false,\r\n          error: error\r\n        });\r\n      });\r\n  }\r\n\r\n  getNewQuote() {\r\n    const { quotes } = this.state;\r\n\r\n    if (quotes && quotes.length) {\r\n      let { quote, author } = generateRandomQuote(quotes);\r\n      this.setState({ quote, author });\r\n    }\r\n  }\r\n  render() {\r\n    const { isLoading, quote, author, error } = this.state;\r\n    return (\r\n      <div id=\"quote-box\">\r\n        {error ? (\r\n          <h3>Opss...Something is not right. Please try again leter..!</h3>\r\n        ) : (\r\n          <>\r\n            <Quote loading={isLoading} quote={quote} author={author} />\r\n            <div className=\"quoteBox-buttons\">\r\n              <TwitterButton quote={quote} author={author} />\r\n              <Button\r\n                id=\"new-quote\"\r\n                clicked={this.getNewQuote}\r\n                name=\"New Quote\"\r\n              />\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default QuoteBox;\r\n","import React from \"react\";\nimport QuoteBox from \"./components/QuoteBox\";\nimport './App.scss';\n\nfunction App() {\n  return <QuoteBox />;\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}